// @ts-nocheck
// eslint-disable
// This file is generated by create-validator-ts

import { Validator } from '@cfworker/json-schema'
import * as apiTypes from './api-types'

const SCHEMA = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/SignInRequest",
  "definitions": {
    "SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 15
        }
      },
      "required": [
        "email",
        "password"
      ],
      "additionalProperties": false
    }
  }
}
  
export function validateSignInRequest(
  payload: unknown
): apiTypes.SignInRequest {
  const validationResponse = isSignInRequest(payload)

  if (!validationResponse.valid) {
    // TODO: properly log error
    console.log(validationResponse.errors)
    
    throw new Error( 'invalid payload: SignInRequest' )
  }
  
  return payload
}

export function isSignInRequest(
  payload: unknown
): payload is apiTypes.SignInRequest {
  /** Schema is defined in {@link SCHEMA.definitions.SignInRequest } **/
  
  const validator = new Validator(SCHEMA.definitions.SignInRequest)
  return validator.validate(payload)
}
